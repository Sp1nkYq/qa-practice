# Задание 1. Читаем книги

## 1. Анализ требований

### Регистрация и Авторизация
- **Создание личного аккаунта**:
  - Тестировать процесс регистрации с использованием электронной почты и пароля, включая проверку уникальности логина и электронной почты.
  - **Риск**: Если не проверить уникальность, возможны конфликты и проблемы с авторизацией.

- **Авторизация через социальные сети**:
  - Тестировать процесс авторизации через ВК, ОК, Tg, включая корректную передачу данных.
  - **Риск**: Неправильная настройка может привести к утечке данных или невозможности авторизоваться.

- **Восстановление доступа**:
  - Тестировать процесс восстановления через email, включая отправку и подтверждение восстановления пароля.
  - **Риск**: Некорректная работа может привести к невозможности восстановления доступа.

### Покупка, Подписочная Модель и Управление Библиотекой
- **Добавление книг в корзину и оформление покупки**:
  - Тестировать процесс добавления книг, оформления покупки и способы оплаты.
  - **Риск**: Ошибки могут привести к финансовым потерям и репутационным рискам.

- **Оформление подписки**:
  - Тестировать проверку тарифных планов, скидок и автоматического обновления книг.
  - **Риск**: Ошибки могут привести к неверному списанию средств или недоступности книг.

- **Управление личной библиотекой**:
  - Тестировать функции просмотра, скрытия и удаления книг, а также создание категорий.
  - **Риск**: Возможна потеря данных о купленных книгах.

### Чтение Книг
- **Онлайн-читалка**:
  - Тестировать закладки, аннотации, шрифты и темы.
  - **Риск**: Неудовлетворительная работа читалки снижает пользовательский опыт.

- **Чтение в офлайн-режиме**:
  - Тестировать скачивание книг и чтение офлайн.
  - **Риск**: Невозможность чтения в офлайн-режиме критична для пользователей.

---

## 2. Оценка юзабилити

### Аспекты Интерфейса для Проверки
- **Ориентирование и Навигация**:
  - Легкость поиска функций и информации.
  - Оценка количества кликов для выполнения целевых действий.

- **Выполнение Целевых Действий**:
  - Простота выполнения регистрации, авторизации, покупки и чтения книг.

- **Ошибочные Действия**:
  - Частота ошибок и время их исправления.

- **Удовлетворенность Пользователей**:
  - Визуальный дизайн и полезность функций.

- **Технические параметры**:
  - Скорость загрузки страниц и переходов.

- **Адаптивность**:
  - Работа интерфейса на различных устройствах.

- **Сравнение с конкурентами**:
  - Определение сильных и слабых сторон интерфейса.

- **Шкала удобства (SUS)**:
  - Использование стандартизированной шкалы для оценки удобства.

---

## 3. Планирование автоматизации

### Приоритет автоматизации
- В первую очередь автоматизируем **API-тесты**, так как они быстрее.
- Используем Python и библиотеку `requests` для API-тестов.
- Для UI-тестов используем Selenium или Playwright.

### Функционал для автоматизации
1. **Регистрация и авторизация**:
   - Регистрация пользователя.
   - Авторизация через социальные сети.

2. **Каталог книг и карточка книги**:
   - Поиск книг и фильтрация.
   - Отображение информации на карточке книги.

3. **Покупка и подписочная модель**:
   - Добавление книги в корзину.
   - Оформление подписки.
   - Проверка оплаты.

4. **Чтение книг**:
   - Онлайн и офлайн режимы.
   - Переключение между дневным и ночным режимами.

5. **Социальное взаимодействие**:
   - Система отзывов и оценок.
   - Подписки и уведомления.

---

# Задание 2. Звезда смерти

## Вопросы и ответы

1. **Что известно о принцессе Лее?**
   - Запрос:  
     `curl --location 'https://swapi.dev/api/people/?search=Leia'`
   - Ответ: Лея находится под номером 5 (`https://swapi.dev/api/people/5/`).

2. **В каком году родился Хан Соло?**
   - Запрос:  
     `curl --location 'https://swapi.dev/api/people/?search=Han%20Solo'`
   - Ответ: `birth_year`: "29BBY".

3. **Что известно о Кашиике (Kashyyyk)? Как он называется на родном языке?**
   - Запрос:  
     `curl --location 'https://swapi.dev/api/planets/?search=Kashyyyk'`
   - Ответ:  
     - ID планеты: 14 (`https://swapi.dev/api/planets/14/`).
     - Родное название: `Kracacrororoor`.

4. **Какие категории информации известны Империи?**
   - Ответ: Смотрите документацию (`https://swapi.dev/documentation#planets`).

5. **Найдите Звезду Смерти.**
   - Запрос:  
     `curl --location 'https://swapi.dev/api/starships/9'`

---

# Задание 3. Что мы знаем о футболистах

## Блок 1

### Вопрос 1: Что такое нормализация в базах данных?
- **Ответ**:  
  Нормализация — это процесс организации данных для минимизации избыточности и обеспечения целостности данных.
  - 1NF: Удаление повторяющихся групп.
  - 2NF: Удаление частичных зависимостей.
  - 3NF: Удаление транзитивных зависимостей.
  - BCNF: Каждый детерминант — ключ.

### Вопрос 2: Зачем нужен первичный ключ?
- **Ответ**:  
  Обеспечивает уникальную идентификацию записей, исключает дублирование, поддерживает целостность данных.

### Вопрос 3: Что происходит при нарушении ограничения UNIQUE?
- **Ответ**:  
  Возникает ошибка, предотвращающая дублирование уникальных данных.

## Блок 2

### Уровень 1: Самый молодой игрок
```sql
SELECT first_name, last_name, dob 
FROM Players 
ORDER BY dob DESC 
LIMIT 1;
```
- **Ответ**: Max Verstappen, дата рождения: 2001-01-30.

### Уровень 2: Наиболее результативный игрок
```sql
SELECT p.first_name, p.last_name, SUM(l.goals) AS total_goals
FROM Players p
JOIN Lineups l ON p.player_id = l.player_id
GROUP BY p.first_name, p.last_name
ORDER BY total_goals DESC
LIMIT 1;
```
- **Ответ**: Lord Farquaad, общее количество голов: 22.

### Уровень 3: Злостный нарушитель
```sql
SELECT p.first_name, p.last_name, COUNT(l.cards) AS total_cards
FROM Players p
JOIN Lineups l ON p.player_id = l.player_id
WHERE l.cards IS NOT NULL
GROUP BY p.first_name, p.last_name
ORDER BY total_cards DESC
LIMIT 1;
```
- **Ответ**: Ryan Gosling, общее количество карточек: 33.
